package test;
/**
 * 
 * @author 233admincol
 *将一个字符串转换成一个整数(实现Integer.valueOf(string)的功能，但是string不符合数字要求时返回0)，
 *要求不能使用字符串转换整数的库函数。
 * 数值为0或者字符串不是一个合法的数值则返回0。
 */
public class 把字符串转换为整数 {
	  public static boolean flag;
	  
	    public static int StrToInt(String str) {
	        flag = false;
	        //判断输入是否合法
	        if (str == null || str.trim().equals("")) {
	            flag = true;
	            return 0;
	        }
	        // symbol=0,说明该数为正数;symbol=1，该数为负数;start用来区分第一位是否为符号位
	        int symbol = 0;
	        int start = 0;
	        char[] chars = str.trim().toCharArray();
	        if (chars[0] == '+') {
	            start = 1;
	        } else if (chars[0] == '-') {
	            start = 1;
	            symbol = 1;
	        }
	        int result = 0;
	        for (int i = start; i < chars.length; i++) {
	            if (chars[i] > '9' || chars[i] < '0') {
	                flag = true;
	                return 0;
	            }
	            //sum是用来验算的
	            int sum= result * 10 + (int) (chars[i] - '0');
	             
	             
	            if((sum-(int) (chars[i] - '0'))/10!=result){
	                flag=true;
	                return 0;
	            }
	             //result是结果，每循环一次，上一次结果扩大10倍
	            result=result * 10 + (int) (chars[i] - '0');
	            /*
	             * 本人认为java热门第一判断是否溢出是错误的，举个反例
	             * 当输入为value=2147483648时，在计算机内部的表示应该是-2147483648
	             * 显然value>Integer.MAX_VALUE是不成立的
	            */
	        }
	        // 注意：java中-1的n次方不能用：(-1)^n .'^'异或运算
	        // 注意，当value=-2147483648时，value=-value
	        //用pow算出正负
	        result = (int) Math.pow(-1, symbol) * result;
	        return result;
	    }
}
